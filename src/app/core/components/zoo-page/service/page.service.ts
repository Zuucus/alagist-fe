import { Injectable } from '@angular/core';
import { Role } from 'src/app/enums/role.enum';

@Injectable({
  providedIn: 'root',
})
export class PageService {
  getRoleList(): string[] {
    return Object.values(Role);
  }

  sideMenuList = [
    {
      name: 'Dashboard',
      icon: 'pi-home',
      children: [],
      route: '/dashboard',
      isSelected: false,
      isHovered: false,
      enum: Role.DASHBOARD,
      roles: this.getRoleList(),
    },
    {
      name: 'Users',
      icon: 'pi-users',
      children: [],
      route: '/users',
      isSelected: false,
      isHovered: false,
      enum: Role.USER,
      roles: [Role.USER, Role.SuperUser],
    },
    {
      name: 'Customers-KDocs',
      icon: 'pi-user-edit',
      children: [],
      route: '/customers',
      isSelected: false,
      isHovered: false,
      enum: Role.CUSTOMER,
      roles: [Role.CUSTOMER],
    },
    {
      name: 'Profile',
      icon: 'pi-user',
      route: '/profile',
      isSelected: false,
      isHovered: false,
      enum: 'prfl',
      roles: [Role.DOCUMENTAPPROVAL, Role.MYDOCUMENTS, Role.SuperUser],
      hidden: true,
      children: [
        {
          name: 'My Documents',
          icon: 'pi-file',
          children: [],
          route: '/me/documents',
          isSelected: false,
          isHovered: false,
          enum: Role.MYDOCUMENTS,
          roles: [Role.MYDOCUMENTS, Role.SuperUser],
          hidden: true,
        },
        {
          name: 'Documents Approved by Me',
          icon: 'pi-check',
          children: [],
          route: '/me/documents-approval',
          isSelected: false,
          isHovered: false,
          enum: Role.DOCUMENTAPPROVAL,
          roles: [Role.DOCUMENTAPPROVAL, Role.SuperUser],
          hidden: true,
        },
        {
          name: 'User settings',
          icon: 'pi-settings',
          children: [],
          route: '/me/settings',
          isSelected: false,
          isHovered: false,
          enum: Role.USERSETTING,
          roles: this.getRoleList(),
          hidden: true,
        },
      ],
    },

    {
      name: 'Organization',
      icon: 'pi-money-bill',
      children: [],
      route: '/organization',
      isSelected: false,
      isHovered: false,
      enum: 'ORG',
      roles: ['ORG', Role.SuperUser],
    },
    {
      name: 'Translations',
      icon: 'pi-language',
      roles: [Role.LOCALISATION],
      enum: Role.LOCALISATION,
      children: [],
      route: '/translations',
      isSelected: false,
      isHovered: false,
    },
    {
      name: 'Accounts',
      icon: 'pi-dollar',
      roles: [
        Role.ACCOUNTCREATE,
        Role.ACCOUNTREAD,
        Role.ACCOUNTDELETE,
        Role.ACCOUNTUPDATE,
        Role.JOURNALENTRYCREATE,
        Role.JOURNALENTRYREAD,
        Role.JOURNALENTRYUPDATE,
        Role.JOURNALENTRYDELETE,
        Role.ACCOUNTSBALANCESHEET,
        Role.ACCOUNTSTRIALBALANCE,
        Role.JOURNALENTRYDRAFT,
        Role.CUSTOMERSTATEMENTCREATE,
        Role.CUSTOMERSTATEMENTREAD,
        Role.CUSTOMERSTATEMENTUPDATE,
        Role.CUSTOMERSTATEMENTDELETE,
        Role.INCOMESTATEMENT,
        Role.CASHFLOWSTATEMENT,
      ],
      children: [
        // {
        //   name: 'Analytics',
        //   icon: 'pi-book',
        //   children: [],
        //   route: '/accounts/analytics',
        //   isSelected: false,
        //   isHovered: false,
        //   roles: [Role.ACCOUNTSBALANCESHEET],
        //   enum: Role.ACCOUNTSBALANCESHEET,
        // },
        {
          name: 'Chart of Accounts',
          icon: 'pi-bitcoin',
          children: [
            {
              name: 'Create',
              icon: 'pi-plus',
              enum: Role.ACCOUNTCREATE,
              roles: [Role.ACCOUNTCREATE],
            },
            {
              name: 'View',
              icon: 'pi-eye',
              enum: Role.ACCOUNTREAD,
              roles: [Role.ACCOUNTREAD],
            },
            {
              name: 'Edit',
              icon: 'pi-pencil',
              enum: Role.ACCOUNTUPDATE,
              roles: [Role.ACCOUNTUPDATE],
            },
            {
              name: 'Delete',
              icon: 'pi-trash',
              enum: Role.ACCOUNTDELETE,
              roles: [Role.ACCOUNTDELETE],
            },
          ],
          route: '/accounts/chart-of-account',
          isSelected: false,
          isHovered: false,
          roles: [
            Role.ACCOUNTCREATE,
            Role.ACCOUNTREAD,
            Role.ACCOUNTDELETE,
            Role.ACCOUNTUPDATE,
          ],
          enum: 'ENT',
        },
        {
          name: 'Journal Entry',
          icon: 'pi-calculator',
          children: [
            {
              name: 'Create',
              icon: 'pi-plus',
              enum: Role.JOURNALENTRYCREATE,
              roles: [Role.JOURNALENTRYCREATE], //JEC
            },
            {
              name: 'View',
              icon: 'pi-eye',
              enum: Role.JOURNALENTRYREAD,
              roles: [Role.JOURNALENTRYREAD], //JER
            },
            {
              name: 'Edit',
              icon: 'pi-pencil',
              enum: Role.JOURNALENTRYUPDATE,
              roles: [Role.JOURNALENTRYUPDATE], //JEU
            },
            {
              name: 'Delete',
              icon: 'pi-trash',
              enum: Role.JOURNALENTRYDELETE,
              roles: [Role.JOURNALENTRYDELETE], //JED
            },
          ],
          route: '/accounts/journal-entry',
          isSelected: false,
          isHovered: false,
          roles: [
            Role.JOURNALENTRYCREATE,
            Role.JOURNALENTRYREAD,
            Role.JOURNALENTRYUPDATE,
            Role.JOURNALENTRYDELETE,
          ],
          enum: Role.JOURNALENTRYCREATE,
        },
        {
          name: 'Journal Entry Draft',
          icon: 'pi-hashtag',
          children: [],
          route: '/accounts/journal-entry-drafts',
          isSelected: false,
          isHovered: false,
          enum: Role.JOURNALENTRYDRAFT,
          roles: [Role.JOURNALENTRYDRAFT, Role.SuperUser],
        },
        {
          name: 'Income Statement',
          icon: 'pi-book',
          children: [],
          route: '/accounts/income-statement',
          isSelected: false,
          isHovered: false,
          roles: [Role.INCOMESTATEMENT],
          enum: Role.INCOMESTATEMENT,
        },
        {
          name: 'Cash Flow Statement',
          icon: 'pi-book',
          children: [],
          route: '/accounts/cash-flow-statement',
          isSelected: false,
          isHovered: false,
          roles: [Role.CASHFLOWSTATEMENT],
          enum: Role.CASHFLOWSTATEMENT,
        },
        {
          name: 'Balance Sheet',
          icon: 'pi-book',
          children: [],
          route: '/accounts/balance-sheet',
          isSelected: false,
          isHovered: false,
          roles: [Role.ACCOUNTSBALANCESHEET],
          enum: Role.ACCOUNTSBALANCESHEET,
        },
        {
          name: 'Trial Balance',
          icon: 'pi-tablet',
          children: [],
          route: '/accounts/trial-balance',
          isSelected: false,
          isHovered: false,
          roles: [Role.ACCOUNTSTRIALBALANCE],
          enum: Role.ACCOUNTSTRIALBALANCE, //ATB
        },
        {
          name: 'Customer Statement',
          icon: 'pi-list',
          children: [
            {
              name: 'Create',
              icon: 'pi-plus',
              enum: Role.CUSTOMERSTATEMENTCREATE,
              roles: [Role.CUSTOMERSTATEMENTCREATE],
            },
            {
              name: 'View',
              icon: 'pi-eye',
              enum: Role.CUSTOMERSTATEMENTREAD,
              roles: [Role.CUSTOMERSTATEMENTREAD],
            },
            {
              name: 'Edit',
              icon: 'pi-pencil',
              enum: Role.CUSTOMERSTATEMENTUPDATE,
              roles: [Role.CUSTOMERSTATEMENTUPDATE],
            },
            {
              name: 'Delete',
              icon: 'pi-trash',
              enum: Role.CUSTOMERSTATEMENTDELETE,
              roles: [Role.CUSTOMERSTATEMENTDELETE],
            },
          ],
          route: '/accounts/customer-statements',
          isSelected: false,
          isHovered: false,
          roles: [
            Role.CUSTOMERSTATEMENTCREATE,
            Role.CUSTOMERSTATEMENTUPDATE,
            Role.CUSTOMERSTATEMENTREAD,
            Role.CUSTOMERSTATEMENTDELETE,
          ],
          enum: Role.CUSTOMERSTATEMENTCREATE, //ATB
        },
      ],
      route: '/accounts',
      isSelected: false,
      isHovered: false,
    },
    {
      name: 'KDocs',
      icon: 'pi-book',
      roles: [
        Role.KD_EXPORTS,
        Role.IMPORTS,
        Role.MINISTOCK,
        Role.KD_LOCALSALES,
        Role.KD_LOCALSALESRETURN,
      ],
      children: [
        {
          name: 'Exports',
          icon: 'pi-file-export',
          children: [],
          route: '/kdocs/export',
          isSelected: false,
          isHovered: false,
          roles: [Role.KD_EXPORTS],
          enum: Role.KD_EXPORTS,
        },
        {
          name: 'Imports',
          icon: 'pi-file-import',
          children: [],
          route: '/kdocs/import',
          isSelected: false,
          isHovered: false,
          roles: [Role.IMPORTS],
          enum: Role.IMPORTS,
        },
        {
          name: 'Mini Stock',
          icon: 'pi-briefcase',
          children: [],
          route: '/kdocs/ministock',
          isSelected: false,
          isHovered: false,
          roles: [Role.MINISTOCK],
          enum: Role.MINISTOCK,
        },
        {
          name: 'Local Sales',
          icon: 'pi-wallet',
          children: [],
          route: '/kdocs/local-sales',
          isSelected: false,
          isHovered: false,
          roles: [Role.KD_LOCALSALES],
          enum: Role.KD_LOCALSALES,
        },
        {
          name: 'Local Sales Return',
          icon: 'pi-wallet',
          children: [],
          route: '/kdocs/local-sales-return',
          isSelected: false,
          isHovered: false,
          roles: [Role.KD_LOCALSALESRETURN],
          enum: Role.KD_LOCALSALESRETURN,
        },
      ],
      route: '/kdocs',
      isSelected: false,
      isHovered: false,
    },
    {
      name: 'HR',
      icon: 'pi-wallet',
      roles: [
        Role.DOCUMENTTEMPLATE,
        Role.STATICFIELD,
        Role.DOCUMENTGENERATION,
        Role.ALLOWANCEREQUESTLIST,
        Role.LEAVEREQUESTLIST,
        Role.OVERTIMEAPPROVALLIST,
        Role.HRUSERLIST,
        Role.HOLIDAYTEMPLATECREATE,
        Role.HOLIDAYTEMPLATEDELETE,
        Role.HOLIDAYTEMPLATEREAD,
        Role.HOLIDAYTEMPLATEUPDATE,
        Role.CONTRACTTEMPLATECREATE,
        Role.CONTRACTTEMPLATEDELETE,
        Role.CONTRACTTEMPLATEREAD,
        Role.CONTRACTTEMPLATEUPDATE,
        Role.FILEAPPROVALLIST,
      ],
      children: [
        {
          name: 'Document templates',
          icon: 'pi-file',
          children: [],
          enum: Role.DOCUMENTTEMPLATE,
          roles: [Role.DOCUMENTTEMPLATE],
          route: '/hr/document-templates',
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Document Generation',
          icon: 'pi-list',
          children: [],
          enum: Role.DOCUMENTGENERATION,
          roles: [Role.DOCUMENTGENERATION],
          route: '/hr/document-generation',
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Static fields',
          icon: 'pi-ticket',
          enum: Role.STATICFIELD,
          route: '/hr/static-field',
          children: [],
          roles: [Role.STATICFIELD],
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'User list',
          icon: 'pi-user',
          enum: Role.HRUSERLIST,
          route: '/hr/users',
          children: [],
          roles: [Role.HRUSERLIST],
        },
        {
          name: 'File Approval List',
          icon: 'pi-flag-fill',
          enum: Role.FILEAPPROVALLIST,
          route: '/hr/file-requests',
          children: [],
          roles: [Role.FILEAPPROVALLIST],
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Allowance Approval List',
          icon: 'pi-flag-fill',
          enum: Role.ALLOWANCEREQUESTLIST,
          route: '/hr/allowance-requests',
          children: [],
          roles: [Role.ALLOWANCEREQUESTLIST],
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Leave Approval List',
          icon: 'pi-table',
          enum: Role.LEAVEREQUESTLIST,
          route: '/hr/leave-requests',
          children: [],
          roles: [Role.LEAVEREQUESTLIST],
        },
        {
          name: 'OverTime Approval List',
          icon: 'pi-flag-fill',
          enum: Role.OVERTIMEAPPROVALLIST,
          route: '/hr/overtime-requests',
          children: [],
          roles: [Role.OVERTIMEAPPROVALLIST],
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Holiday Templates',
          icon: 'pi-calendar',
          children: [
            {
              name: 'Create',
              icon: 'pi-plus',
              enum: Role.HOLIDAYTEMPLATECREATE,
              roles: [Role.HOLIDAYTEMPLATECREATE],
            },
            {
              name: 'View',
              icon: 'pi-eye',
              enum: Role.HOLIDAYTEMPLATEREAD,
              roles: [Role.HOLIDAYTEMPLATEREAD],
            },
            {
              name: 'Edit',
              icon: 'pi-pencil',
              enum: Role.HOLIDAYTEMPLATEUPDATE,
              roles: [Role.HOLIDAYTEMPLATEUPDATE],
            },
            {
              name: 'Delete',
              icon: 'pi-trash',
              enum: Role.HOLIDAYTEMPLATEDELETE,
              roles: [Role.HOLIDAYTEMPLATEDELETE],
            },
          ],
          enum: Role.HOLIDAYTEMPLATEREAD,
          roles: [
            Role.HOLIDAYTEMPLATEREAD,
            Role.HOLIDAYTEMPLATECREATE,
            Role.HOLIDAYTEMPLATEUPDATE,
            Role.HOLIDAYTEMPLATEDELETE,
          ],
          route: '/hr/holidays',
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Contract Templates',
          icon: 'pi-calendar',
          children: [
            {
              name: 'Create',
              icon: 'pi-plus',
              enum: Role.CONTRACTTEMPLATECREATE,
              roles: [Role.CONTRACTTEMPLATECREATE],
            },
            {
              name: 'View',
              icon: 'pi-eye',
              enum: Role.CONTRACTTEMPLATEREAD,
              roles: [Role.CONTRACTTEMPLATEREAD],
            },
            {
              name: 'Edit',
              icon: 'pi-pencil',
              enum: Role.CONTRACTTEMPLATEUPDATE,
              roles: [Role.CONTRACTTEMPLATEUPDATE],
            },
            {
              name: 'Delete',
              icon: 'pi-trash',
              enum: Role.CONTRACTTEMPLATEDELETE,
              roles: [Role.CONTRACTTEMPLATEDELETE],
            },
          ],
          enum: Role.CONTRACTTEMPLATECREATE,
          roles: [
            Role.CONTRACTTEMPLATEREAD,
            Role.CONTRACTTEMPLATECREATE,
            Role.CONTRACTTEMPLATEUPDATE,
            Role.CONTRACTTEMPLATEDELETE,
          ],
          route: '/hr/contracts',
          isSelected: false,
          isHovered: false,
        },
      ],
      route: '/hr',
      isSelected: false,
      isHovered: false,
    },
    {
      name: 'Metals',
      icon: 'pi-ticket',
      children: [],
      route: '/metals',
      isSelected: false,
      isHovered: false,
      roles: [Role.SuperUser],
    },
    {
      name: 'Style types',
      icon: 'pi-ticket',
      children: [],
      route: '/style-types',
      isSelected: false,
      isHovered: false,
      roles: [Role.SuperUser],
    },
    {
      name: 'Style',
      icon: 'pi-microsoft',
      children: [
        {
          name: 'New style',
          icon: 'pi-plus',
          children: [],
          route: '/styles/new',
          isSelected: false,
          isHovered: false,
          roles: [Role.PRODUCTSTYLECREATE, Role.SuperUser],
          enum: Role.PRODUCTSTYLECREATE,
          hidden: true,
        },
        {
          name: 'Styles',
          icon: 'pi-eye',
          route: '/styles/list',
          children: [],
          roles: [Role.PRODUCTSTYLEREAD, Role.SuperUser],
          enum: Role.PRODUCTSTYLEREAD,
        },
        {
          name: 'Edit style',
          icon: 'pi-pencil',
          route: '/styles/:id',
          children: [],
          roles: [Role.PRODUCTSTYLEUPDATE, Role.SuperUser],
          enum: Role.PRODUCTSTYLEUPDATE,
          hidden: true,
        },
        {
          name: 'Delete style',
          icon: 'pi-trash',
          children: [],
          roles: [Role.PRODUCTSTYLEDELETE, Role.SuperUser],
          enum: Role.PRODUCTSTYLEDELETE,
          hidden: true,
        },
      ],
      route: '/styles',
      isSelected: false,
      isHovered: false,
      enum: 'STY',
      roles: [
        Role.SuperUser,
        Role.PRODUCTSTYLECREATE,
        Role.PRODUCTSTYLEREAD,
        Role.PRODUCTSTYLEUPDATE,
        Role.PRODUCTSTYLEDELETE,
      ],
    },
    {
      name: 'Stock management',
      icon: 'pi-th-large',
      children: [
        {
          name: 'Import memo-in',
          icon: 'pi-plus',
          children: [],
          route: '/memo-in/import',
          isSelected: false,
          isHovered: false,
          roles: [Role.MEMOINCREATE, Role.SuperUser],
          enum: Role.MEMOINCREATE,
          hidden: true,
        },
        {
          name: 'Memo-in listings',
          icon: 'pi-file-import',
          route: '/memo-in/list',
          children: [],
          roles: [Role.MEMOINREAD, Role.SuperUser],
          enum: Role.MEMOINREAD,
        },
        {
          name: 'Order sheets',
          icon: 'pi-check',
          route: '/stock/ordersheets/list',
          children: [],
          roles: [Role.ORDERSHEETREAD, Role.SuperUser],
          enum: Role.ORDERSHEETREAD,
        },
        {
          name: 'Sale Return Invoices',
          icon: 'pi-credit-card',
          route: '/stock/return/invoice/list',
          children: [],
          roles: [Role.SALERETURNINVOICELIST, Role.SuperUser],
          enum: Role.SALERETURNINVOICELIST,
        },
        {
          name: 'Stock listings',
          icon: 'pi-th-large',
          route: '/stock/list',
          children: [],
          roles: [Role.STOCKREAD, Role.SuperUser],
          enum: Role.STOCKREAD,
        },
        {
          name: 'Exchange rates',
          icon: 'pi-dollar',
          children: [],
          route: '/stock-management/exchange-rates',
          isSelected: false,
          isHovered: false,
          roles: [Role.EXCHANGERATE, Role.SuperUser],
          enum: Role.EXCHANGERATE,
        },
        {
          name: 'Events',
          icon: 'pi-calendar',
          children: [],
          route: '/stock-management/events',
          isSelected: false,
          isHovered: false,
          roles: [Role.EVENTS, Role.SuperUser],
          enum: Role.EVENTS,
        },

        {
          name: 'Edit memo-in',
          icon: 'pi-pencil',
          route: '/memo-in/:id',
          children: [],
          roles: [Role.MEMOINUPDATE, Role.SuperUser],
          enum: Role.MEMOINUPDATE,
          hidden: true,
        },
        {
          name: 'Delete memo-in',
          icon: 'pi-trash',
          children: [],
          roles: [Role.MEMOINDELETE, Role.SuperUser],
          enum: Role.MEMOINDELETE,
          hidden: true,
        },
        {
          name: 'Repiar list',
          icon: 'pi-wrench',
          children: [],
          route: '/repair/list',
          isSelected: false,
          isHovered: false,
          roles: [Role.REPAIRINGREAD, Role.SuperUser],
          enum: Role.REPAIRINGREAD,
        },
        {
          name: 'Repiar create',
          icon: '',
          children: [],
          route: '/repair/new',
          isSelected: false,
          isHovered: false,
          roles: [Role.REPAIRINGCREATE, Role.SuperUser],
          enum: Role.REPAIRINGCREATE,
          hidden: true,
        },
        {
          name: 'Repiar edit',
          icon: '',
          children: [],
          route: '/repair/:id/edit',
          isSelected: false,
          isHovered: false,
          roles: [Role.REPAIRINGUPDATE, Role.SuperUser],
          enum: Role.REPAIRINGUPDATE,
          hidden: true,
        },
        {
          name: 'Stock Transfer',
          icon: 'pi-th-large',
          children: [],
          route: '/stock/transfer/list',
          isSelected: false,
          isHovered: false,
          roles: [Role.STOCKTRANSFER],
          enum: Role.STOCKTRANSFER,
        },
        // {
        //   name: 'Branches',
        //   icon: '',
        //   children: [],
        //   route: '/branch/list',
        //   isSelected: false,
        //   isHovered: false,
        //   roles: [Role.BRANCHREAD, Role.SuperUser],
        //   enum: Role.BRANCHREAD,
        // },
        // {
        //   name: 'New branch',
        //   icon: '',
        //   children: [],
        //   route: '/branch/new',
        //   isSelected: false,
        //   isHovered: false,
        //   roles: [Role.BRANCHCREATE, Role.SuperUser],
        //   enum: Role.BRANCHCREATE,
        //   hidden: true,
        // },
        // {
        //   name: 'Edit branch',
        //   icon: '',
        //   children: [],
        //   route: '/branch/:id/edit',
        //   isSelected: false,
        //   isHovered: false,
        //   roles: [Role.BRANCHUPDATE, Role.SuperUser],
        //   enum: Role.BRANCHUPDATE,
        //   hidden: true,
        // },
      ],
      route: '/stock-management',
      isSelected: false,
      isHovered: false,
      enum: 'STM',
      roles: [
        Role.SuperUser,
        Role.MEMOINCREATE,
        Role.MEMOINREAD,
        Role.MEMOINUPDATE,
        Role.MEMOINDELETE,
        Role.STOCKCREATE,
        Role.STOCKREAD,
        Role.STOCKUPDATE,
        Role.STOCKDELETE,
        Role.SALERETURNREAD,
        Role.SALERETURNCREATE,
        Role.SALERETURNUPDATE,
        Role.SALERETURNDELETE,
        Role.ORDERSHEETREAD,
        Role.SALERETURNINVOICELIST,
        Role.EXCHANGERATE,
        Role.EVENTS,
        Role.REPAIRINGREAD,
        Role.REPAIRINGCREATE,
        Role.REPAIRINGUPDATE,
        Role.REPAIRINGDELETE,
        Role.BRANCHREAD,
        Role.BRANCHCREATE,
        Role.BRANCHUPDATE,
      ],
    },
    {
      name: 'Customers',
      icon: 'pi-user',
      roles: [Role.CUSTOMER],
      enum: Role.CUSTOMER,
      children: [],
      isHidden: false,
      isSelected: false,
      isHovered: false,
      route: '/debtors',
    },
    {
      name: 'Vendors',
      icon: 'pi-user',
      roles: [Role.VENDOR],
      enum: Role.VENDOR,
      children: [],
      isHidden: false,
      isSelected: false,
      isHovered: false,
      route: '/creditors',
    },
    {
      name: 'Sales',
      icon: 'pi-shopping-cart',
      roles: [
        Role.LOCAL_SALES,
        Role.EXPORTS_SALES,
        Role.LOCAL_SHOW_SALES,
        Role.FOREIGN_SHOW_SALES,
        Role.USED_JEWELLERY_SALES,
        Role.TAX_FREE_SALES,
      ],
      enum: 'SAL',
      isHidden: false,
      isSelected: false,
      isHovered: false,
      route: '/sales',
      children: [
        {
          name: 'Local Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/local-sales',
          roles: [Role.LOCAL_SALES],
          enum: Role.LOCAL_SALES,
        },
        {
          name: 'Export Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/export-sales',
          roles: [Role.EXPORTS_SALES],
          enum: Role.EXPORTS_SALES,
        },
        {
          name: 'Local Show Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/local-show-sales',
          roles: [Role.LOCAL_SHOW_SALES],
          enum: Role.LOCAL_SHOW_SALES,
        },
        {
          name: 'Foreign Show Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/foreign-show-sales',
          roles: [Role.FOREIGN_SHOW_SALES],
          enum: Role.FOREIGN_SHOW_SALES,
        },
        {
          name: 'Used Jewelry Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/used-jewelry-sales',
          roles: [Role.USED_JEWELLERY_SALES],
          enum: Role.USED_JEWELLERY_SALES,
        },
        {
          name: 'Tax Free Sales',
          icon: 'pi-circle-fill',
          children: [],
          route: '/sales/tax-free-sales',
          roles: [Role.TAX_FREE_SALES],
          enum: Role.TAX_FREE_SALES,
        },
      ],
    },
    {
      name: 'Attendance',
      icon: 'pi-table',
      roles: [
        Role.ATTENDANCECREATE,
        Role.ATTENDANCEDELETE,
        Role.ATTENDANCEINOUT,
        Role.ATTENDANCEMANAGE,
        Role.ATTENDANCEREAD,
        Role.ATTENDANCEUPDATE,
        Role.DAILYATTENDANCE,
      ],
      children: [
        {
          name: 'Attendance',
          icon: 'pi-table',
          children: [],
          enum: Role.ATTENDANCEREAD,
          roles: [Role.ATTENDANCEREAD],
          route: '/attendance/list',
          isSelected: false,
          isHovered: false,
        },
        {
          name: 'Attendance IN OUT',
          icon: 'pi-table',
          children: [],
          enum: Role.ATTENDANCEINOUT,
          roles: [Role.ATTENDANCEINOUT],
          route: '/attendance/in-out',
          isSelected: false,
          isHovered: false,
          hidden: true,
        },
        {
          name: 'Edit Attendance',
          icon: 'pi-table',
          children: [],
          enum: Role.ATTENDANCEUPDATE,
          roles: [Role.ATTENDANCEUPDATE],
          route: '/attendance/edit',
          isSelected: false,
          isHovered: false,
          hidden: true,
        },
        {
          name: 'Create Attendance',
          icon: 'pi-table',
          children: [],
          enum: Role.ATTENDANCECREATE,
          roles: [Role.ATTENDANCECREATE],
          route: '/attendance/new',
          isSelected: false,
          isHovered: false,
          hidden: true,
        },
        {
          name: 'Manage Attendance',
          icon: 'pi-table',
          children: [],
          enum: Role.ATTENDANCEMANAGE,
          roles: [Role.ATTENDANCEMANAGE],
          route: '/attendance/approve',
          isSelected: false,
          isHovered: false,
          hidden: true,
        },
        {
          name: 'Daily Attendance',
          icon: 'pi-table',
          children: [],
          enum: Role.DAILYATTENDANCE,
          roles: [Role.DAILYATTENDANCE],
          route: '/attendance/daily',
          isSelected: false,
          isHovered: false,
        },
      ],
      route: '/attendance',
      isSelected: false,
      isHovered: false,
    },
  ];

  languageList = [
    {
      name: 'English',
      code: 'en',
      isSelected: true,
    },
    {
      name: '日本',
      code: 'ja',
      isSelected: false,
    },
  ];

  getLanguageList() {
    return this.languageList;
  }

  getSideMenuPageList() {
    return this.sideMenuList;
  }

  getSideMenuListWithoutHiddenPage() {
    const sideMenuList = JSON.parse(JSON.stringify(this.sideMenuList));
    return this.filterItems(sideMenuList);
  }

  changeSelection(item: any, children?: any) {
    this.sideMenuList = this.sideMenuList.map((x) => {
      if (
        item.route === x.route &&
        item.name === x.name &&
        item.icon === x.icon
      ) {
        x.isSelected = children ? true : !x.isSelected;
      } else {
        x.isSelected = false;
      }

      if (children) {
        x.children = x.children.map((c: any) => {
          c.isSelected =
            children && children.route === c.route && children.name === c.name;
          return c;
        });
      }
      return x;
    });
  }

  private filterItems(items: any[]) {
    return items.filter((item) => {
      if (item.hidden) {
        return false;
      } else {
        if (item.children && item.children.length > 0) {
          item.children = this.filterItems(item.children);
        }
        return true;
      }
    });
  }
}
